{"version":3,"sources":["services/notes.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","typeM","console","log","className","ButtonDelete","props","onClick","onClickEv","textB","Contentlistbutton","content","onClickE","text","style","listStyle","map","note","name","number","Filter","value","onChange","handleChange","PersonForm","onSubmit","addNameApp","value1","onChange1","value2","onChange2","type","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newCriteria","setNewCriteria","positiveMessage","setPositiveMessage","typeMessage","setTypeMessage","useEffect","noteService","initialNotes","updatePhonebookRec","find","n","changedNote","returnedNote","catch","error","setTimeout","filter","notesToShow1","persona","toLowerCase","includes","event","target","preventDefault","personsNamesLowCase","window","confirm","concat","eId","eName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f5d432f.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/persons'\r\n//part 3\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\n//part 3.10\r\nconst baseUrl = 'https://fshy-rita-part3.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst delById = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, delById }","import React from 'react'\r\n\r\nconst Notification = ({message,typeM}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  console.log(\"Notification comp, typeM=\",typeM)\r\n  return (\r\n    <div className={typeM}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst ButtonDelete=(props)=>{\n  //console.log(\"I am button\")\n  return(\n        <button onClick={props.onClickEv } > {props.textB} </button>\n  )\n}\nconst Contentlistbutton = ({content,onClickE,text}) => {\n  return (\n    <div>\n      <ul style={{listStyle: 'none'}}>\n      {content.map(note => \n        <li  key={note.id}>\n          {note.name} {note.number}\n          <ButtonDelete onClickEv={()=>onClickE(note.id,note.name)} textB={text} />\n        </li>\n      )}\n      </ul>\n    </div> \n  )\n} \nconst Filter=(props)=>{\n  return(\n    <div>filter: \n        <input value={props.value} onChange={props.handleChange}/>\n    </div>\n  )\n}\nconst PersonForm=(props)=>{\n  return(<form onSubmit={props.addNameApp}>\n    <div>\n      debug: {props.value1}\n    </div>\n    <div>name:\n       <input\n        value={props.value1}\n        onChange={props.onChange1}\n      />\n    </div>\n    <div>number:\n       <input\n        value={props.value2}\n        onChange={props.onChange2}\n      />\n    </div>\n    <button type=\"submit\">ADD</button>\n  </form>)\n}\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  /* const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas', number: '040-123456' },\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' },\n    { name: 'ok', number: '55-23-6423122' }\n  ])  */\n \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newCriteria, setNewCriteria ] = useState('')\n  const [positiveMessage, setPositiveMessage] = useState(null)  \n  const [typeMessage, setTypeMessage] = useState(\"positive\") \n  \n  //2.15 sending data to service=fetching from db\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setPersons(initialNotes)\n    })\n  }, [])\n  //2.15 sending data to service=fetching from db\n\n  const addName = (event) => {\n    event.preventDefault()\n    //console.log(\"AddName:persons befor checking\",persons)\n    \n    const personsNamesLowCase=persons.map(function(persona){\n      return persona.name.toLowerCase()\n    })\n    setTypeMessage(\"positive\")\n    //console.log(\"AddName:personsNames befor checking\",personsNamesLowCase)\n    if (personsNamesLowCase.includes(newName.toLowerCase())){\n      //console.log(newName, \" already in\")\n      const note = persons.find(persona => persona.name.toLowerCase() === newName.toLowerCase())\n      //console.log(\"persone to update is: \",note)\n      //console.log(\"newName is \",newName)\n      const doIt = window.confirm(`${note.name} is already in phonebook. Do you want to update number?`)\n      if (doIt) {\n        updatePhonebookRec(note.id,newNumber)\n      }\n      setPositiveMessage(\n        `${newName} phone number is updated`\n      )\n      setNewName('')\n      setNewNumber('')\n    }\n    else {\n      const nameObject = {\n        name: newName,\n        number:newNumber \n      } \n      noteService//2.15\n      .create(nameObject)\n        .then(returnedNote => {\n        setPersons(persons.concat(returnedNote))\n        setPositiveMessage(\n          `contact ${newName}  is added into phonebook`\n        )\n        setNewName('')\n        setNewNumber('')\n      })//2.15\n    }\n    //2.19 Styled message\n    setTimeout(() => {\n      setPositiveMessage(null)\n    }, 5000)\n    //2.19 styled message\n  }\n  //2.18 update phonebook recordes\n  const updatePhonebookRec = (id,newNumber) => {\n    const note = persons.find(n => n.id === id)\n    //console.log(\"updatePhoneBookRec where newNumber\", newNumber)\n    const changedNote = { ...note, name: note.name, number: newNumber }\n    //console.log(\"note to update\", changedNote)\n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setPersons(persons.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setTypeMessage(\"error\")\n      setPositiveMessage(\n        `The note '${note.name}' was already deleted from server`\n      )\n      setTimeout(() => {\n        setPositiveMessage(null)\n      }, 5000)\n      setPersons(persons.filter(n => n.id !== id))\n    })    \n  }\n  //2.18\n  //2.17 delete person by clicking delete button\n  const handleClick=(eId,eName)=>{\n    //console.log(\"passed:\",{eId})\n    const doIt=window.confirm(`Delete ${eName}?`)\n    if (doIt){\n      noteService//2.15\n      .delById(eId)\n        .then(() => {\n        setPersons(persons.filter(persona =>(!(persona.id === eId))))\n      })//2.15\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n  //2.17\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleCriteriaChange = (event) => {\n    //console.log(\"Criteria comp\")\n    //console.log(event.target.value)\n    setNewCriteria(event.target.value)\n  }\n  \n  const notesToShow1 = persons.filter(persona => persona.name.toLowerCase().includes(newCriteria.toLowerCase()))\n  //console.log(\"filtered pesr:\",notesToShow1)\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={positiveMessage} typeM={typeMessage}/>\n      <Filter value={newCriteria} handleChange={handleCriteriaChange}/> \n      <h2>add a new</h2>\n      <PersonForm value1={newName} \n                  value2={newNumber} \n                  addNameApp={addName} \n                  onChange1={handleNameChange}\n                  onChange2={handleNumberChange}/>\n      <h2>Numbers</h2>\n       <Contentlistbutton content={notesToShow1} onClickE={handleClick} text=\"delete\"/> \n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n/* const promise = axios.get('http://localhost:3001/persons')\npromise.then(response => {\n  console.log(response)\n})  */\n /* axios\n  .get('http://localhost:3001/persons')\n  .then(response => {\n  const persons = response.data\n  console.log(\"respons data:\",persons)\n  ReactDOM.render(\n    <App />, \n    document.getElementById('root')\n  )\n})  */\n//console.log(promise)\n ReactDOM.render(\n  <App />, \n  document.getElementById('root')\n) "],"sourceRoot":""}